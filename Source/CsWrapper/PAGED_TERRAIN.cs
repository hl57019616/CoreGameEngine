/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PAGED_TERRAIN : TERRAIN_TYPE {
  private HandleRef swigCPtr;

  internal PAGED_TERRAIN(IntPtr cPtr, bool cMemoryOwn) : base(testPINVOKE.PAGED_TERRAIN_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PAGED_TERRAIN obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PAGED_TERRAIN() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_PAGED_TERRAIN(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SWIGTYPE_p_String Name {
    set {
      testPINVOKE.PAGED_TERRAIN_Name_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.PAGED_TERRAIN_Name_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_String TerrainFile {
    set {
      testPINVOKE.PAGED_TERRAIN_TerrainFile_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.PAGED_TERRAIN_TerrainFile_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool isColorMap {
    set {
      testPINVOKE.PAGED_TERRAIN_isColorMap_set(swigCPtr, value);
    } 
    get {
      bool ret = testPINVOKE.PAGED_TERRAIN_isColorMap_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 TextureSize {
    set {
      testPINVOKE.PAGED_TERRAIN_TextureSize_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_TextureSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 ColorMapTextureSize {
    set {
      testPINVOKE.PAGED_TERRAIN_ColorMapTextureSize_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_ColorMapTextureSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 LightMapTextureSize {
    set {
      testPINVOKE.PAGED_TERRAIN_LightMapTextureSize_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_LightMapTextureSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u16 MapSize {
    set {
      testPINVOKE.PAGED_TERRAIN_MapSize_set(swigCPtr, SWIGTYPE_p_u16.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u16 ret = new SWIGTYPE_p_u16(testPINVOKE.PAGED_TERRAIN_MapSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_s32 MinX {
    set {
      testPINVOKE.PAGED_TERRAIN_MinX_set(swigCPtr, SWIGTYPE_p_s32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_s32 ret = new SWIGTYPE_p_s32(testPINVOKE.PAGED_TERRAIN_MinX_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_s32 MaxX {
    set {
      testPINVOKE.PAGED_TERRAIN_MaxX_set(swigCPtr, SWIGTYPE_p_s32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_s32 ret = new SWIGTYPE_p_s32(testPINVOKE.PAGED_TERRAIN_MaxX_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_s32 MinY {
    set {
      testPINVOKE.PAGED_TERRAIN_MinY_set(swigCPtr, SWIGTYPE_p_s32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_s32 ret = new SWIGTYPE_p_s32(testPINVOKE.PAGED_TERRAIN_MinY_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_s32 MaxY {
    set {
      testPINVOKE.PAGED_TERRAIN_MaxY_set(swigCPtr, SWIGTYPE_p_s32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_s32 ret = new SWIGTYPE_p_s32(testPINVOKE.PAGED_TERRAIN_MaxY_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 WorldSize {
    set {
      testPINVOKE.PAGED_TERRAIN_WorldSize_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_WorldSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 PageDesityMapSize {
    set {
      testPINVOKE.PAGED_TERRAIN_PageDesityMapSize_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_PageDesityMapSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 DetailDistance {
    set {
      testPINVOKE.PAGED_TERRAIN_DetailDistance_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_DetailDistance_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 PageSize {
    set {
      testPINVOKE.PAGED_TERRAIN_PageSize_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_PageSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u32 MaxPixelError {
    set {
      testPINVOKE.PAGED_TERRAIN_MaxPixelError_set(swigCPtr, SWIGTYPE_p_u32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.PAGED_TERRAIN_MaxPixelError_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u16 MaxBatchSize {
    set {
      testPINVOKE.PAGED_TERRAIN_MaxBatchSize_set(swigCPtr, SWIGTYPE_p_u16.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u16 ret = new SWIGTYPE_p_u16(testPINVOKE.PAGED_TERRAIN_MaxBatchSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_u16 MinBatchSize {
    set {
      testPINVOKE.PAGED_TERRAIN_MinBatchSize_set(swigCPtr, SWIGTYPE_p_u16.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_u16 ret = new SWIGTYPE_p_u16(testPINVOKE.PAGED_TERRAIN_MinBatchSize_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_String ResourceGroup {
    set {
      testPINVOKE.PAGED_TERRAIN_ResourceGroup_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.PAGED_TERRAIN_ResourceGroup_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_Vector3 Position {
    set {
      testPINVOKE.PAGED_TERRAIN_Position_set(swigCPtr, SWIGTYPE_p_Vector3.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_Vector3 ret = new SWIGTYPE_p_Vector3(testPINVOKE.PAGED_TERRAIN_Position_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__TERRAIN_LAYER_t Layers {
    set {
      testPINVOKE.PAGED_TERRAIN_Layers_set(swigCPtr, SWIGTYPE_p_VectorT_Core__TERRAIN_LAYER_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.PAGED_TERRAIN_Layers_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__TERRAIN_LAYER_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__TERRAIN_LAYER_t(cPtr, false);
      return ret;
    } 
  }

  public PAGED_TERRAIN() : this(testPINVOKE.new_PAGED_TERRAIN(), true) {
  }

}
