/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SceneImporterPackage : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SceneImporterPackage(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SceneImporterPackage obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SceneImporterPackage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_SceneImporterPackage(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SceneImporterPackage() : this(testPINVOKE.new_SceneImporterPackage(), true) {
  }

  public CGameManager GameManager {
    set {
      testPINVOKE.SceneImporterPackage_GameManager_set(swigCPtr, CGameManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_GameManager_get(swigCPtr);
      CGameManager ret = (cPtr == IntPtr.Zero) ? null : new CGameManager(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_Core__Physics__IPhysicsStrategy PhysicsStrategy {
    set {
      testPINVOKE.SceneImporterPackage_PhysicsStrategy_set(swigCPtr, SWIGTYPE_p_Core__Physics__IPhysicsStrategy.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_PhysicsStrategy_get(swigCPtr);
      SWIGTYPE_p_Core__Physics__IPhysicsStrategy ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Core__Physics__IPhysicsStrategy(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_Sound__CSoundManager SoundManager {
    set {
      testPINVOKE.SceneImporterPackage_SoundManager_set(swigCPtr, SWIGTYPE_p_Sound__CSoundManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_SoundManager_get(swigCPtr);
      SWIGTYPE_p_Sound__CSoundManager ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Sound__CSoundManager(cPtr, false);
      return ret;
    } 
  }

  public CItemsManager ItemsManager {
    set {
      testPINVOKE.SceneImporterPackage_ItemsManager_set(swigCPtr, CItemsManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_ItemsManager_get(swigCPtr);
      CItemsManager ret = (cPtr == IntPtr.Zero) ? null : new CItemsManager(cPtr, false);
      return ret;
    } 
  }

  public CGameObjectManager GameObjectManager {
    set {
      testPINVOKE.SceneImporterPackage_GameObjectManager_set(swigCPtr, CGameObjectManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_GameObjectManager_get(swigCPtr);
      CGameObjectManager ret = (cPtr == IntPtr.Zero) ? null : new CGameObjectManager(cPtr, false);
      return ret;
    } 
  }

  public CNatureManager NatureManager {
    set {
      testPINVOKE.SceneImporterPackage_NatureManager_set(swigCPtr, CNatureManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_NatureManager_get(swigCPtr);
      CNatureManager ret = (cPtr == IntPtr.Zero) ? null : new CNatureManager(cPtr, false);
      return ret;
    } 
  }

  public CCameraManager CameraManager {
    set {
      testPINVOKE.SceneImporterPackage_CameraManager_set(swigCPtr, CCameraManager.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.SceneImporterPackage_CameraManager_get(swigCPtr);
      CCameraManager ret = (cPtr == IntPtr.Zero) ? null : new CCameraManager(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_String ResourceGroupName {
    set {
      testPINVOKE.SceneImporterPackage_ResourceGroupName_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.SceneImporterPackage_ResourceGroupName_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
