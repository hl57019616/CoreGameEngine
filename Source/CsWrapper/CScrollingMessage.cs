/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CScrollingMessage : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CScrollingMessage(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CScrollingMessage obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CScrollingMessage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_CScrollingMessage(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public CScrollingMessage() : this(testPINVOKE.new_CScrollingMessage(), true) {
  }

  public void Init() {
    testPINVOKE.CScrollingMessage_Init(swigCPtr);
  }

  public void AddText(SWIGTYPE_p_String text) {
    testPINVOKE.CScrollingMessage_AddText(swigCPtr, SWIGTYPE_p_String.getCPtr(text));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Update(SWIGTYPE_p_f32 elapsedTime) {
    testPINVOKE.CScrollingMessage_Update(swigCPtr, SWIGTYPE_p_f32.getCPtr(elapsedTime));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

}
