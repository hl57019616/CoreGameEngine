/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CCharacterState : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CCharacterState(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CCharacterState obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CCharacterState() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_CCharacterState(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual E_CHARACTER_STATE_OUTCOME Update(SWIGTYPE_p_f32 elapsedTime) {
    E_CHARACTER_STATE_OUTCOME ret = (E_CHARACTER_STATE_OUTCOME)testPINVOKE.CCharacterState_Update(swigCPtr, SWIGTYPE_p_f32.getCPtr(elapsedTime));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public E_CHARACTER_STATE_OUTCOME GetOutcomeState() {
    E_CHARACTER_STATE_OUTCOME ret = (E_CHARACTER_STATE_OUTCOME)testPINVOKE.CCharacterState_GetOutcomeState(swigCPtr);
    return ret;
  }

  public E_PLAYER_STATE GetStateType() {
    E_PLAYER_STATE ret = (E_PLAYER_STATE)testPINVOKE.CCharacterState_GetStateType(swigCPtr);
    return ret;
  }

  public string GetStateName() {
    string ret = testPINVOKE.CCharacterState_GetStateName(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_u32 GetLevel() {
    SWIGTYPE_p_u32 ret = new SWIGTYPE_p_u32(testPINVOKE.CCharacterState_GetLevel(swigCPtr), true);
    return ret;
  }

}
