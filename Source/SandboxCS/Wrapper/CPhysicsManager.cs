/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CPhysicsManager : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CPhysicsManager(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CPhysicsManager obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CPhysicsManager() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_CPhysicsManager(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public static CPhysicsManager Instance() {
    IntPtr cPtr = testPINVOKE.CPhysicsManager_Instance();
    CPhysicsManager ret = (cPtr == IntPtr.Zero) ? null : new CPhysicsManager(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Core__Physics__IPhysicsStrategy CreateStrategy(string Label) {
    IntPtr cPtr = testPINVOKE.CPhysicsManager_CreateStrategy(swigCPtr, Label);
    SWIGTYPE_p_Core__Physics__IPhysicsStrategy ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Core__Physics__IPhysicsStrategy(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Core__Physics__IPhysicsStrategy GetStrategy() {
    IntPtr cPtr = testPINVOKE.CPhysicsManager_GetStrategy(swigCPtr);
    SWIGTYPE_p_Core__Physics__IPhysicsStrategy ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Core__Physics__IPhysicsStrategy(cPtr, false);
    return ret;
  }

  public void DeleteStrategy() {
    testPINVOKE.CPhysicsManager_DeleteStrategy(swigCPtr);
  }

  public void AddPhysicsProfile(string ProfileName, CPhysicsProfile Profile) {
    testPINVOKE.CPhysicsManager_AddPhysicsProfile(swigCPtr, ProfileName, CPhysicsProfile.getCPtr(Profile));
  }

  public void GetPhysicsProfileList(SWIGTYPE_p_MapT_String_Core__Physics__CPhysicsProfile_p_t ProfileList) {
    testPINVOKE.CPhysicsManager_GetPhysicsProfileList(swigCPtr, SWIGTYPE_p_MapT_String_Core__Physics__CPhysicsProfile_p_t.getCPtr(ProfileList));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public CPhysicsProfile GetPhysicsProfile(string ProfileName) {
    IntPtr cPtr = testPINVOKE.CPhysicsManager_GetPhysicsProfile(swigCPtr, ProfileName);
    CPhysicsProfile ret = (cPtr == IntPtr.Zero) ? null : new CPhysicsProfile(cPtr, false);
    return ret;
  }

  public void Update(SWIGTYPE_p_f32 elapsedTime) {
    testPINVOKE.CPhysicsManager_Update(swigCPtr, SWIGTYPE_p_f32.getCPtr(elapsedTime));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public static string DEFAULT_LIGHT_CUBE {
    set {
      testPINVOKE.CPhysicsManager_DEFAULT_LIGHT_CUBE_set(value);
    } 
    get {
      string ret = testPINVOKE.CPhysicsManager_DEFAULT_LIGHT_CUBE_get();
      return ret;
    } 
  }

  public static string DEFAULT_MEDIUM_CUBE {
    set {
      testPINVOKE.CPhysicsManager_DEFAULT_MEDIUM_CUBE_set(value);
    } 
    get {
      string ret = testPINVOKE.CPhysicsManager_DEFAULT_MEDIUM_CUBE_get();
      return ret;
    } 
  }

  public static string DEFAULT_HEAVY_CUBE {
    set {
      testPINVOKE.CPhysicsManager_DEFAULT_HEAVY_CUBE_set(value);
    } 
    get {
      string ret = testPINVOKE.CPhysicsManager_DEFAULT_HEAVY_CUBE_get();
      return ret;
    } 
  }

  public static string DEFAULT_LIGHT_SPHERE {
    set {
      testPINVOKE.CPhysicsManager_DEFAULT_LIGHT_SPHERE_set(value);
    } 
    get {
      string ret = testPINVOKE.CPhysicsManager_DEFAULT_LIGHT_SPHERE_get();
      return ret;
    } 
  }

  public static string DEFAULT_MEDIUM_SPHERE {
    set {
      testPINVOKE.CPhysicsManager_DEFAULT_MEDIUM_SPHERE_set(value);
    } 
    get {
      string ret = testPINVOKE.CPhysicsManager_DEFAULT_MEDIUM_SPHERE_get();
      return ret;
    } 
  }

  public static string DEFAULT_HEAVY_SPHERE {
    set {
      testPINVOKE.CPhysicsManager_DEFAULT_HEAVY_SPHERE_set(value);
    } 
    get {
      string ret = testPINVOKE.CPhysicsManager_DEFAULT_HEAVY_SPHERE_get();
      return ret;
    } 
  }

}
