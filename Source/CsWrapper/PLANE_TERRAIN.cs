/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PLANE_TERRAIN : TERRAIN_TYPE {
  private HandleRef swigCPtr;

  internal PLANE_TERRAIN(IntPtr cPtr, bool cMemoryOwn) : base(testPINVOKE.PLANE_TERRAIN_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PLANE_TERRAIN obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PLANE_TERRAIN() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_PLANE_TERRAIN(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public bool isUsed {
    set {
      testPINVOKE.PLANE_TERRAIN_isUsed_set(swigCPtr, value);
    } 
    get {
      bool ret = testPINVOKE.PLANE_TERRAIN_isUsed_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_Vector3 Normal {
    set {
      testPINVOKE.PLANE_TERRAIN_Normal_set(swigCPtr, SWIGTYPE_p_Vector3.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_Vector3 ret = new SWIGTYPE_p_Vector3(testPINVOKE.PLANE_TERRAIN_Normal_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PLANE_TERRAIN() : this(testPINVOKE.new_PLANE_TERRAIN(), true) {
  }

}
