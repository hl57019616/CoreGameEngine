/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class DATA_CONTAINER : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DATA_CONTAINER(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DATA_CONTAINER obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DATA_CONTAINER() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_DATA_CONTAINER(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SCENEMANAGER SceneManager {
    set {
      testPINVOKE.DATA_CONTAINER_SceneManager_set(swigCPtr, SCENEMANAGER.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_SceneManager_get(swigCPtr);
      SCENEMANAGER ret = (cPtr == IntPtr.Zero) ? null : new SCENEMANAGER(cPtr, false);
      return ret;
    } 
  }

  public VIEWPORT Viewport {
    set {
      testPINVOKE.DATA_CONTAINER_Viewport_set(swigCPtr, VIEWPORT.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Viewport_get(swigCPtr);
      VIEWPORT ret = (cPtr == IntPtr.Zero) ? null : new VIEWPORT(cPtr, false);
      return ret;
    } 
  }

  public CAELUM Caelum {
    set {
      testPINVOKE.DATA_CONTAINER_Caelum_set(swigCPtr, CAELUM.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Caelum_get(swigCPtr);
      CAELUM ret = (cPtr == IntPtr.Zero) ? null : new CAELUM(cPtr, false);
      return ret;
    } 
  }

  public HYDRAX Hydrax {
    set {
      testPINVOKE.DATA_CONTAINER_Hydrax_set(swigCPtr, HYDRAX.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Hydrax_get(swigCPtr);
      HYDRAX ret = (cPtr == IntPtr.Zero) ? null : new HYDRAX(cPtr, false);
      return ret;
    } 
  }

  public HEIGHT_TERRAIN HeightTerrain {
    set {
      testPINVOKE.DATA_CONTAINER_HeightTerrain_set(swigCPtr, HEIGHT_TERRAIN.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_HeightTerrain_get(swigCPtr);
      HEIGHT_TERRAIN ret = (cPtr == IntPtr.Zero) ? null : new HEIGHT_TERRAIN(cPtr, false);
      return ret;
    } 
  }

  public PAGED_TERRAIN PagedTerrain {
    set {
      testPINVOKE.DATA_CONTAINER_PagedTerrain_set(swigCPtr, PAGED_TERRAIN.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_PagedTerrain_get(swigCPtr);
      PAGED_TERRAIN ret = (cPtr == IntPtr.Zero) ? null : new PAGED_TERRAIN(cPtr, false);
      return ret;
    } 
  }

  public PLANE_TERRAIN PlaneTerrain {
    set {
      testPINVOKE.DATA_CONTAINER_PlaneTerrain_set(swigCPtr, PLANE_TERRAIN.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_PlaneTerrain_get(swigCPtr);
      PLANE_TERRAIN ret = (cPtr == IntPtr.Zero) ? null : new PLANE_TERRAIN(cPtr, false);
      return ret;
    } 
  }

  public ASTAR_GRID AStarGrid {
    set {
      testPINVOKE.DATA_CONTAINER_AStarGrid_set(swigCPtr, ASTAR_GRID.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_AStarGrid_get(swigCPtr);
      ASTAR_GRID ret = (cPtr == IntPtr.Zero) ? null : new ASTAR_GRID(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__LIGHT_t Lights {
    set {
      testPINVOKE.DATA_CONTAINER_Lights_set(swigCPtr, SWIGTYPE_p_VectorT_Core__LIGHT_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Lights_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__LIGHT_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__LIGHT_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__CAMERA_t Cameras {
    set {
      testPINVOKE.DATA_CONTAINER_Cameras_set(swigCPtr, SWIGTYPE_p_VectorT_Core__CAMERA_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Cameras_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__CAMERA_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__CAMERA_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__GAMEOBJECT_t GameObjects {
    set {
      testPINVOKE.DATA_CONTAINER_GameObjects_set(swigCPtr, SWIGTYPE_p_VectorT_Core__GAMEOBJECT_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_GameObjects_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__GAMEOBJECT_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__GAMEOBJECT_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__WEAPON_t Weapons {
    set {
      testPINVOKE.DATA_CONTAINER_Weapons_set(swigCPtr, SWIGTYPE_p_VectorT_Core__WEAPON_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Weapons_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__WEAPON_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__WEAPON_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__MAGAZINE_t Magazines {
    set {
      testPINVOKE.DATA_CONTAINER_Magazines_set(swigCPtr, SWIGTYPE_p_VectorT_Core__MAGAZINE_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Magazines_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__MAGAZINE_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__MAGAZINE_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__PROJECTILES_t Projectiles {
    set {
      testPINVOKE.DATA_CONTAINER_Projectiles_set(swigCPtr, SWIGTYPE_p_VectorT_Core__PROJECTILES_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Projectiles_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__PROJECTILES_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__PROJECTILES_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__MELEE_t Melees {
    set {
      testPINVOKE.DATA_CONTAINER_Melees_set(swigCPtr, SWIGTYPE_p_VectorT_Core__MELEE_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Melees_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__MELEE_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__MELEE_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__PHYSICS_PROFILE_t PhysicsProfiles {
    set {
      testPINVOKE.DATA_CONTAINER_PhysicsProfiles_set(swigCPtr, SWIGTYPE_p_VectorT_Core__PHYSICS_PROFILE_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_PhysicsProfiles_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__PHYSICS_PROFILE_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__PHYSICS_PROFILE_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__ARCHIVE_t Archives {
    set {
      testPINVOKE.DATA_CONTAINER_Archives_set(swigCPtr, SWIGTYPE_p_VectorT_Core__ARCHIVE_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Archives_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__ARCHIVE_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__ARCHIVE_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__WATER_t Waters {
    set {
      testPINVOKE.DATA_CONTAINER_Waters_set(swigCPtr, SWIGTYPE_p_VectorT_Core__WATER_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Waters_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__WATER_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__WATER_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__BGSOUND_t BgSounds {
    set {
      testPINVOKE.DATA_CONTAINER_BgSounds_set(swigCPtr, SWIGTYPE_p_VectorT_Core__BGSOUND_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_BgSounds_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__BGSOUND_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__BGSOUND_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__SOUND_t Sounds {
    set {
      testPINVOKE.DATA_CONTAINER_Sounds_set(swigCPtr, SWIGTYPE_p_VectorT_Core__SOUND_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Sounds_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__SOUND_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__SOUND_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__BILLBOARD_t Billboards {
    set {
      testPINVOKE.DATA_CONTAINER_Billboards_set(swigCPtr, SWIGTYPE_p_VectorT_Core__BILLBOARD_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Billboards_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__BILLBOARD_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__BILLBOARD_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__GEO_SET_t GeoSets {
    set {
      testPINVOKE.DATA_CONTAINER_GeoSets_set(swigCPtr, SWIGTYPE_p_VectorT_Core__GEO_SET_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_GeoSets_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__GEO_SET_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__GEO_SET_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__ANIMATION_MAPPING_t AnimationMapping {
    set {
      testPINVOKE.DATA_CONTAINER_AnimationMapping_set(swigCPtr, SWIGTYPE_p_VectorT_Core__ANIMATION_MAPPING_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_AnimationMapping_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__ANIMATION_MAPPING_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__ANIMATION_MAPPING_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_String StaticData {
    set {
      testPINVOKE.DATA_CONTAINER_StaticData_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.DATA_CONTAINER_StaticData_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__AI_PATH_t AiPaths {
    set {
      testPINVOKE.DATA_CONTAINER_AiPaths_set(swigCPtr, SWIGTYPE_p_VectorT_Core__AI_PATH_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_AiPaths_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__AI_PATH_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__AI_PATH_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__PLACED_ITEM_t PlacedItems {
    set {
      testPINVOKE.DATA_CONTAINER_PlacedItems_set(swigCPtr, SWIGTYPE_p_VectorT_Core__PLACED_ITEM_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_PlacedItems_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__PLACED_ITEM_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__PLACED_ITEM_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__PLAYER_t Players {
    set {
      testPINVOKE.DATA_CONTAINER_Players_set(swigCPtr, SWIGTYPE_p_VectorT_Core__PLAYER_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Players_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__PLAYER_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__PLAYER_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__SPAWN_POINT_t SpawnPoints {
    set {
      testPINVOKE.DATA_CONTAINER_SpawnPoints_set(swigCPtr, SWIGTYPE_p_VectorT_Core__SPAWN_POINT_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_SpawnPoints_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__SPAWN_POINT_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__SPAWN_POINT_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_VectorT_Core__BUILDING_t Buildings {
    set {
      testPINVOKE.DATA_CONTAINER_Buildings_set(swigCPtr, SWIGTYPE_p_VectorT_Core__BUILDING_t.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.DATA_CONTAINER_Buildings_get(swigCPtr);
      SWIGTYPE_p_VectorT_Core__BUILDING_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_VectorT_Core__BUILDING_t(cPtr, false);
      return ret;
    } 
  }

  public void Reset() {
    testPINVOKE.DATA_CONTAINER_Reset(swigCPtr);
  }

  public DATA_CONTAINER() : this(testPINVOKE.new_DATA_CONTAINER(), true) {
  }

}
