/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class MovableTextOverlayAttributes : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MovableTextOverlayAttributes(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MovableTextOverlayAttributes obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MovableTextOverlayAttributes() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          testPINVOKE.delete_MovableTextOverlayAttributes(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public MovableTextOverlayAttributes(SWIGTYPE_p_String name, SWIGTYPE_p_Camera cam, SWIGTYPE_p_String fontName, SWIGTYPE_p_f32 charHeight, SWIGTYPE_p_ColourValue color, SWIGTYPE_p_String materialName) : this(testPINVOKE.new_MovableTextOverlayAttributes__SWIG_0(SWIGTYPE_p_String.getCPtr(name), SWIGTYPE_p_Camera.getCPtr(cam), SWIGTYPE_p_String.getCPtr(fontName), SWIGTYPE_p_f32.getCPtr(charHeight), SWIGTYPE_p_ColourValue.getCPtr(color), SWIGTYPE_p_String.getCPtr(materialName)), true) {
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public MovableTextOverlayAttributes(SWIGTYPE_p_String name, SWIGTYPE_p_Camera cam, SWIGTYPE_p_String fontName, SWIGTYPE_p_f32 charHeight, SWIGTYPE_p_ColourValue color) : this(testPINVOKE.new_MovableTextOverlayAttributes__SWIG_1(SWIGTYPE_p_String.getCPtr(name), SWIGTYPE_p_Camera.getCPtr(cam), SWIGTYPE_p_String.getCPtr(fontName), SWIGTYPE_p_f32.getCPtr(charHeight), SWIGTYPE_p_ColourValue.getCPtr(color)), true) {
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public MovableTextOverlayAttributes(SWIGTYPE_p_String name, SWIGTYPE_p_Camera cam, SWIGTYPE_p_String fontName, SWIGTYPE_p_f32 charHeight) : this(testPINVOKE.new_MovableTextOverlayAttributes__SWIG_2(SWIGTYPE_p_String.getCPtr(name), SWIGTYPE_p_Camera.getCPtr(cam), SWIGTYPE_p_String.getCPtr(fontName), SWIGTYPE_p_f32.getCPtr(charHeight)), true) {
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public MovableTextOverlayAttributes(SWIGTYPE_p_String name, SWIGTYPE_p_Camera cam, SWIGTYPE_p_String fontName) : this(testPINVOKE.new_MovableTextOverlayAttributes__SWIG_3(SWIGTYPE_p_String.getCPtr(name), SWIGTYPE_p_Camera.getCPtr(cam), SWIGTYPE_p_String.getCPtr(fontName)), true) {
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public MovableTextOverlayAttributes(SWIGTYPE_p_String name, SWIGTYPE_p_Camera cam) : this(testPINVOKE.new_MovableTextOverlayAttributes__SWIG_4(SWIGTYPE_p_String.getCPtr(name), SWIGTYPE_p_Camera.getCPtr(cam)), true) {
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetFontName(SWIGTYPE_p_String fontName) {
    testPINVOKE.MovableTextOverlayAttributes_SetFontName(swigCPtr, SWIGTYPE_p_String.getCPtr(fontName));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetMaterialName(SWIGTYPE_p_String materialName) {
    testPINVOKE.MovableTextOverlayAttributes_SetMaterialName(swigCPtr, SWIGTYPE_p_String.getCPtr(materialName));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetColor(SWIGTYPE_p_ColourValue color) {
    testPINVOKE.MovableTextOverlayAttributes_SetColor(swigCPtr, SWIGTYPE_p_ColourValue.getCPtr(color));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetCharacterHeight(SWIGTYPE_p_u32 height) {
    testPINVOKE.MovableTextOverlayAttributes_SetCharacterHeight(swigCPtr, SWIGTYPE_p_u32.getCPtr(height));
    if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_String GetName() {
    SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.MovableTextOverlayAttributes_GetName(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_Camera GetCamera() {
    IntPtr cPtr = testPINVOKE.MovableTextOverlayAttributes_GetCamera(swigCPtr);
    SWIGTYPE_p_Camera ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Camera(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Font GetFont() {
    IntPtr cPtr = testPINVOKE.MovableTextOverlayAttributes_GetFont(swigCPtr);
    SWIGTYPE_p_Font ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Font(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_String GetFontName() {
    SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.MovableTextOverlayAttributes_GetFontName(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_String GetMaterialName() {
    SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.MovableTextOverlayAttributes_GetMaterialName(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_ColourValue GetColor() {
    SWIGTYPE_p_ColourValue ret = new SWIGTYPE_p_ColourValue(testPINVOKE.MovableTextOverlayAttributes_GetColor(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_f32 GetCharacterHeight() {
    SWIGTYPE_p_f32 ret = new SWIGTYPE_p_f32(testPINVOKE.MovableTextOverlayAttributes_GetCharacterHeight(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_String mName {
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.MovableTextOverlayAttributes_mName_get(swigCPtr), true);
      return ret;
    } 
  }

  public SWIGTYPE_p_Camera mpCam {
    set {
      testPINVOKE.MovableTextOverlayAttributes_mpCam_set(swigCPtr, SWIGTYPE_p_Camera.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.MovableTextOverlayAttributes_mpCam_get(swigCPtr);
      SWIGTYPE_p_Camera ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Camera(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_Font mpFont {
    set {
      testPINVOKE.MovableTextOverlayAttributes_mpFont_set(swigCPtr, SWIGTYPE_p_Font.getCPtr(value));
    } 
    get {
      IntPtr cPtr = testPINVOKE.MovableTextOverlayAttributes_mpFont_get(swigCPtr);
      SWIGTYPE_p_Font ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_Font(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_String mFontName {
    set {
      testPINVOKE.MovableTextOverlayAttributes_mFontName_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.MovableTextOverlayAttributes_mFontName_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_String mMaterialName {
    set {
      testPINVOKE.MovableTextOverlayAttributes_mMaterialName_set(swigCPtr, SWIGTYPE_p_String.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_String ret = new SWIGTYPE_p_String(testPINVOKE.MovableTextOverlayAttributes_mMaterialName_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_ColourValue mColor {
    set {
      testPINVOKE.MovableTextOverlayAttributes_mColor_set(swigCPtr, SWIGTYPE_p_ColourValue.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_ColourValue ret = new SWIGTYPE_p_ColourValue(testPINVOKE.MovableTextOverlayAttributes_mColor_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f32 mCharHeight {
    set {
      testPINVOKE.MovableTextOverlayAttributes_mCharHeight_set(swigCPtr, SWIGTYPE_p_f32.getCPtr(value));
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_f32 ret = new SWIGTYPE_p_f32(testPINVOKE.MovableTextOverlayAttributes_mCharHeight_get(swigCPtr), true);
      if (testPINVOKE.SWIGPendingException.Pending) throw testPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
